# AUTOMATICALLY GENERATED by `shtab`

_shtab_entrypoint_subparsers=('list-clusters' 'create-cluster' 'delete-cluster' 'describe-cluster' 'update-cluster' 'describe-compute-fleet' 'update-compute-fleet' 'delete-cluster-instances' 'describe-cluster-instances' 'list-cluster-log-streams' 'get-cluster-log-events' 'get-cluster-stack-events' 'list-images' 'build-image' 'delete-image' 'describe-image' 'list-image-log-streams' 'get-image-log-events' 'get-image-stack-events' 'list-official-images')

_shtab_entrypoint_option_strings=('-h' '--help')
_shtab_entrypoint_list_clusters_option_strings=('-h' '--help' '-r' '--region' '--next-token' '--cluster-status' '--debug' '--query')
_shtab_entrypoint_create_cluster_option_strings=('-h' '--help' '-r' '--region' '--suppress-validators' '--validation-failure-level' '--dryrun' '--rollback-on-failure' '-n' '--cluster-name' '-c' '--cluster-configuration' '--debug' '--query')
_shtab_entrypoint_delete_cluster_option_strings=('-h' '--help' '-n' '--cluster-name' '-r' '--region' '--debug' '--query')
_shtab_entrypoint_describe_cluster_option_strings=('-h' '--help' '-n' '--cluster-name' '-r' '--region' '--debug' '--query')
_shtab_entrypoint_update_cluster_option_strings=('-h' '--help' '-n' '--cluster-name' '--suppress-validators' '--validation-failure-level' '-r' '--region' '--dryrun' '--force-update' '-c' '--cluster-configuration' '--debug' '--query')
_shtab_entrypoint_describe_compute_fleet_option_strings=('-h' '--help' '-n' '--cluster-name' '-r' '--region' '--debug' '--query')
_shtab_entrypoint_update_compute_fleet_option_strings=('-h' '--help' '-n' '--cluster-name' '-r' '--region' '--status' '--debug' '--query')
_shtab_entrypoint_delete_cluster_instances_option_strings=('-h' '--help' '-n' '--cluster-name' '-r' '--region' '--force' '--debug' '--query')
_shtab_entrypoint_describe_cluster_instances_option_strings=('-h' '--help' '-n' '--cluster-name' '-r' '--region' '--next-token' '--node-type' '--queue-name' '--debug' '--query')
_shtab_entrypoint_list_cluster_log_streams_option_strings=('-h' '--help' '-n' '--cluster-name' '-r' '--region' '--filters' '--next-token' '--debug' '--query')
_shtab_entrypoint_get_cluster_log_events_option_strings=('-h' '--help' '-n' '--cluster-name' '--log-stream-name' '-r' '--region' '--next-token' '--start-from-head' '--limit' '--start-time' '--end-time' '--debug' '--query')
_shtab_entrypoint_get_cluster_stack_events_option_strings=('-h' '--help' '-n' '--cluster-name' '-r' '--region' '--next-token' '--debug' '--query')
_shtab_entrypoint_list_images_option_strings=('-h' '--help' '-r' '--region' '--next-token' '--image-status' '--debug' '--query')
_shtab_entrypoint_build_image_option_strings=('-h' '--help' '--suppress-validators' '--validation-failure-level' '--dryrun' '--rollback-on-failure' '-r' '--region' '-c' '--image-configuration' '-i' '--image-id' '--debug' '--query')
_shtab_entrypoint_delete_image_option_strings=('-h' '--help' '-i' '--image-id' '-r' '--region' '--force' '--debug' '--query')
_shtab_entrypoint_describe_image_option_strings=('-h' '--help' '-i' '--image-id' '-r' '--region' '--debug' '--query')
_shtab_entrypoint_list_image_log_streams_option_strings=('-h' '--help' '-i' '--image-id' '-r' '--region' '--next-token' '--debug' '--query')
_shtab_entrypoint_get_image_log_events_option_strings=('-h' '--help' '-i' '--image-id' '--log-stream-name' '-r' '--region' '--next-token' '--start-from-head' '--limit' '--start-time' '--end-time' '--debug' '--query')
_shtab_entrypoint_get_image_stack_events_option_strings=('-h' '--help' '-i' '--image-id' '-r' '--region' '--next-token' '--debug' '--query')
_shtab_entrypoint_list_official_images_option_strings=('-h' '--help' '-r' '--region' '--os' '--architecture' '--debug' '--query')



_shtab_entrypoint_pos_0_choices=('list-clusters' 'create-cluster' 'delete-cluster' 'describe-cluster' 'update-cluster' 'describe-compute-fleet' 'update-compute-fleet' 'delete-cluster-instances' 'describe-cluster-instances' 'list-cluster-log-streams' 'get-cluster-log-events' 'get-cluster-stack-events' 'list-images' 'build-image' 'delete-image' 'describe-image' 'list-image-log-streams' 'get-image-log-events' 'get-image-stack-events' 'list-official-images')
_shtab_entrypoint_list_clusters___cluster_status_choices=('CREATE_IN_PROGRESS' 'CREATE_FAILED' 'CREATE_COMPLETE' 'DELETE_IN_PROGRESS' 'DELETE_FAILED' 'UPDATE_IN_PROGRESS' 'UPDATE_COMPLETE' 'UPDATE_FAILED')
_shtab_entrypoint_create_cluster___validation_failure_level_choices=('INFO' 'WARNING' 'ERROR')
_shtab_entrypoint_update_cluster___validation_failure_level_choices=('INFO' 'WARNING' 'ERROR')
_shtab_entrypoint_update_compute_fleet___status_choices=('START_REQUESTED' 'STOP_REQUESTED' 'ENABLED' 'DISABLED')
_shtab_entrypoint_describe_cluster_instances___node_type_choices=('HeadNode' 'ComputeNode')
_shtab_entrypoint_list_images___image_status_choices=('AVAILABLE' 'PENDING' 'FAILED')
_shtab_entrypoint_build_image___validation_failure_level_choices=('INFO' 'WARNING' 'ERROR')

_shtab_entrypoint_pos_0_nargs=A...
_shtab_entrypoint__h_nargs=0
_shtab_entrypoint___help_nargs=0
_shtab_entrypoint_list_clusters__h_nargs=0
_shtab_entrypoint_list_clusters___help_nargs=0
_shtab_entrypoint_list_clusters___cluster_status_nargs=+
_shtab_entrypoint_list_clusters___debug_nargs=0
_shtab_entrypoint_create_cluster__h_nargs=0
_shtab_entrypoint_create_cluster___help_nargs=0
_shtab_entrypoint_create_cluster___suppress_validators_nargs=+
_shtab_entrypoint_create_cluster___debug_nargs=0
_shtab_entrypoint_delete_cluster__h_nargs=0
_shtab_entrypoint_delete_cluster___help_nargs=0
_shtab_entrypoint_delete_cluster___debug_nargs=0
_shtab_entrypoint_describe_cluster__h_nargs=0
_shtab_entrypoint_describe_cluster___help_nargs=0
_shtab_entrypoint_describe_cluster___debug_nargs=0
_shtab_entrypoint_update_cluster__h_nargs=0
_shtab_entrypoint_update_cluster___help_nargs=0
_shtab_entrypoint_update_cluster___suppress_validators_nargs=+
_shtab_entrypoint_update_cluster___debug_nargs=0
_shtab_entrypoint_describe_compute_fleet__h_nargs=0
_shtab_entrypoint_describe_compute_fleet___help_nargs=0
_shtab_entrypoint_describe_compute_fleet___debug_nargs=0
_shtab_entrypoint_update_compute_fleet__h_nargs=0
_shtab_entrypoint_update_compute_fleet___help_nargs=0
_shtab_entrypoint_update_compute_fleet___debug_nargs=0
_shtab_entrypoint_delete_cluster_instances__h_nargs=0
_shtab_entrypoint_delete_cluster_instances___help_nargs=0
_shtab_entrypoint_delete_cluster_instances___debug_nargs=0
_shtab_entrypoint_describe_cluster_instances__h_nargs=0
_shtab_entrypoint_describe_cluster_instances___help_nargs=0
_shtab_entrypoint_describe_cluster_instances___debug_nargs=0
_shtab_entrypoint_list_cluster_log_streams__h_nargs=0
_shtab_entrypoint_list_cluster_log_streams___help_nargs=0
_shtab_entrypoint_list_cluster_log_streams___filters_nargs=+
_shtab_entrypoint_list_cluster_log_streams___debug_nargs=0
_shtab_entrypoint_get_cluster_log_events__h_nargs=0
_shtab_entrypoint_get_cluster_log_events___help_nargs=0
_shtab_entrypoint_get_cluster_log_events___debug_nargs=0
_shtab_entrypoint_get_cluster_stack_events__h_nargs=0
_shtab_entrypoint_get_cluster_stack_events___help_nargs=0
_shtab_entrypoint_get_cluster_stack_events___debug_nargs=0
_shtab_entrypoint_list_images__h_nargs=0
_shtab_entrypoint_list_images___help_nargs=0
_shtab_entrypoint_list_images___debug_nargs=0
_shtab_entrypoint_build_image__h_nargs=0
_shtab_entrypoint_build_image___help_nargs=0
_shtab_entrypoint_build_image___suppress_validators_nargs=+
_shtab_entrypoint_build_image___debug_nargs=0
_shtab_entrypoint_delete_image__h_nargs=0
_shtab_entrypoint_delete_image___help_nargs=0
_shtab_entrypoint_delete_image___debug_nargs=0
_shtab_entrypoint_describe_image__h_nargs=0
_shtab_entrypoint_describe_image___help_nargs=0
_shtab_entrypoint_describe_image___debug_nargs=0
_shtab_entrypoint_list_image_log_streams__h_nargs=0
_shtab_entrypoint_list_image_log_streams___help_nargs=0
_shtab_entrypoint_list_image_log_streams___debug_nargs=0
_shtab_entrypoint_get_image_log_events__h_nargs=0
_shtab_entrypoint_get_image_log_events___help_nargs=0
_shtab_entrypoint_get_image_log_events___debug_nargs=0
_shtab_entrypoint_get_image_stack_events__h_nargs=0
_shtab_entrypoint_get_image_stack_events___help_nargs=0
_shtab_entrypoint_get_image_stack_events___debug_nargs=0
_shtab_entrypoint_list_official_images__h_nargs=0
_shtab_entrypoint_list_official_images___help_nargs=0
_shtab_entrypoint_list_official_images___debug_nargs=0


# $1=COMP_WORDS[1]
_shtab_compgen_files() {
  compgen -f -- $1  # files
}

# $1=COMP_WORDS[1]
_shtab_compgen_dirs() {
  compgen -d -- $1  # recurse into subdirs
}

# $1=COMP_WORDS[1]
_shtab_replace_nonword() {
  echo "${1//[^[:word:]]/_}"
}

# set default values (called for the initial parser & any subparsers)
_set_parser_defaults() {
  local subparsers_var="${prefix}_subparsers[@]"
  sub_parsers=${!subparsers_var}

  local current_option_strings_var="${prefix}_option_strings[@]"
  current_option_strings=${!current_option_strings_var}

  completed_positional_actions=0

  _set_new_action "pos_${completed_positional_actions}" true
}

# $1=action identifier
# $2=positional action (bool)
# set all identifiers for an action's parameters
_set_new_action() {
  current_action="${prefix}_$(_shtab_replace_nonword $1)"

  local current_action_compgen_var=${current_action}_COMPGEN
  current_action_compgen="${!current_action_compgen_var}"

  local current_action_choices_var="${current_action}_choices[@]"
  current_action_choices="${!current_action_choices_var}"

  local current_action_nargs_var="${current_action}_nargs"
  if [ -n "${!current_action_nargs_var}" ]; then
    current_action_nargs="${!current_action_nargs_var}"
  else
    current_action_nargs=1
  fi

  current_action_args_start_index=$(( $word_index + 1 ))

  current_action_is_positional=$2
}

# Notes:
# `COMPREPLY`: what will be rendered after completion is triggered
# `completing_word`: currently typed word to generate completions for
# `${!var}`: evaluates the content of `var` and expand its content as a variable
#     hello="world"
#     x="hello"
#     ${!x} -> ${hello} -> "world"
_shtab_entrypoint() {
  local completing_word="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=()

  prefix=_shtab_entrypoint
  word_index=0
  _set_parser_defaults
  word_index=1

  # determine what arguments are appropriate for the current state
  # of the arg parser
  while [ $word_index -ne $COMP_CWORD ]; do
    local this_word="${COMP_WORDS[$word_index]}"

    if [[ -n $sub_parsers && " ${sub_parsers[@]} " =~ " ${this_word} " ]]; then
      # valid subcommand: add it to the prefix & reset the current action
      prefix="${prefix}_$(_shtab_replace_nonword $this_word)"
      _set_parser_defaults
    fi

    if [[ " ${current_option_strings[@]} " =~ " ${this_word} " ]]; then
      # a new action should be acquired (due to recognised option string or
      # no more input expected from current action);
      # the next positional action can fill in here
      _set_new_action $this_word false
    fi

    if [[ "$current_action_nargs" != "*" ]] && \
       [[ "$current_action_nargs" != "+" ]] && \
       [[ "$current_action_nargs" != *"..." ]] && \
       (( $word_index + 1 - $current_action_args_start_index >= \
          $current_action_nargs )); then
      $current_action_is_positional && let "completed_positional_actions += 1"
      _set_new_action "pos_${completed_positional_actions}" true
    fi

    let "word_index+=1"
  done

  # Generate the completions

  if [[ "${completing_word}" == -* ]]; then
    # optional argument started: use option strings
    COMPREPLY=( $(compgen -W "${current_option_strings[*]}" -- "${completing_word}") )
  else
    # use choices & compgen
    local IFS=$'\n' # items may contain spaces, so delimit using newline
    COMPREPLY=( $([ -n "${current_action_compgen}" ] \
                  && "${current_action_compgen}" "${completing_word}") )
    unset IFS
    COMPREPLY+=( $(compgen -W "${current_action_choices[*]}" -- "${completing_word}") )
  fi

  return 0
}

complete -o filenames -F _shtab_entrypoint pcluster
