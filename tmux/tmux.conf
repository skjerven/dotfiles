# --------------------------------------------
# ------------- General Settings -------------
# --------------------------------------------

# Screen like binding
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Screen like binding for last window
unbind l
bind C-a last-window

# Set bell to visual
set -g visual-bell on

# Activity bell and whistles
set -g visual-activity on

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Bigger history
set -g history-limit 50000

# Increase buffer size
set -g buffer-limit 20

# Increase status display time
set -g display-time 1500

# Toggle if window is destroyed when program running in it exits
set -g remain-on-exit off

# Destroy any unattached sessions
set -g destroy-unattached on

# Set key repeat time
set -g repeat-time 300

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Change copy mode (⌘ ↑)
bind -n M-Up copy-mode

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# No escape time for vi mode
set -sg escape-time 0

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Enable mouse support
set-window-option -g mouse on

# Contstrain window to size of smallest client actually displaying that window
setw -g aggressive-resize on

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"



# --------------------------------------------
# --------------- Key Bindings ---------------
# --------------------------------------------

# Unbind default key bindings, we're going to override
unbind [    # paste-buffer
unbind ]
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind o    # focus through panes

# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# Force a reload of the config file
bind C-r source-file ~/.tmux.conf \; display "Reloaded!"

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Select pane and windows
bind -r C-[ previous-window
bind -r C-] next-window
bind -r [ select-pane -t :.-
bind -r ] select-pane -t :.+
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D

# Zoom pane
bind + resize-pane -Z

# Link window
bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# Hide status bar on demand
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# Patch for OS X pbpaste and pbcopy under tmux.
#set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# Easily toggle synchronization (mnemonic: e is for echo)
# Sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off


# --------------------------------------------
# ----- Copy mode, scroll, and clipboard -----
# --------------------------------------------
set -g @copy_use_osc52_fallback on

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi
bind p paste-buffer
bind C-p choose-buffer

# trigger copy mode by
bind -n M-Up copy-mode

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

# wrap default shell in reattach-to-user-namespace if available
# there is some hack with `exec & reattach`, credits to "https://github.com/gpakosz/.tmux"
# don't really understand how it works, but at least window are not renamed to "reattach-to-user-namespace"
if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"

yank="~/.tmux/yank.sh"

# Copy selected text
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi Y send-keys -X copy-line \;\
    run "tmux save-buffer - | $yank"
bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \;\
    run "tmux save-buffer - | $yank"
bind -T copy-mode-vi C-j send-keys -X copy-pipe-and-cancel "$yank"
bind-key -T copy-mode-vi A send-keys -X append-selection-and-cancel \;\
    run "tmux save-buffer - | $yank"

# Copy selection on drag end event, but do not cancel copy mode and do not clear selection
# clear select on subsequence mouse click
bind -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X copy-pipe "$yank"
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
   send-keys -X clear-s


# --------------------------------------------
# ---------------- Appearance ----------------
# --------------------------------------------

# General status bar settings
set -g status on
set -g status-interval 2
set -g status-position bottom
set -g status-justify centre
set -g status-right-length 451


# Color scheme (styled as vim-powerline)

# Basic status bar colors
set -g status-bg colour235
set -g status-fg white

# Left side of status bar
set -g status-left-length 52
set -g status-left '#[fg=black,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour235]⮀'

#Window status
#set -g window-status-format '  #I #W  '
#set -g window-status-current-format '#[fg=colour234,bg=colour4]⮀#[fg=black,bg=colour4,noreverse,bold] #{?window_zoomed_flag,#[fg=colour228],} #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W #[fg=colour4,bg=colour234,nobold]⮀'


#set -g status-style fg=white,bg=colour234
#set -g pane-border-style fg=colour245
#set -g pane-active-border-style fg=colour39
#set -g message-style fg=colour16,bg=colour3,bold
#set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
#set -g window-status-format '#[fg=colour235,bg=colour252,bold] #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W '

# Configure tmux-prefix-highlight colors
#set -g @prefix_highlight_output_prefix '['
#set -g @prefix_highlight_output_suffix ']'
#set -g @prefix_highlight_fg "colour13"
#set -g @prefix_highlight_bg "colour234"
#set -g @prefix_highlight_show_copy_mode 'on'
#set -g @prefix_highlight_copy_mode_attr "fg=colour9,bg=colour234"

# Define widgets
wg_is_keys_off="#[fg=colour252,bg=colour196]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"




# --------------------------------------------
# ------ Nesting local & remote sessions -----
# --------------------------------------------

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
#bind -T root F12  \
    #set prefix None \;\
    #set key-table off \;\
    #set status-style "fg=$color39,bg=$colour238" \;\
    #set window-status-current-format "#[fg=colour238,bg=colour254]⮀#[ #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
#set -g window-status-current-format '#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #{?window_zoomed_flag,#[fg=colour228],} #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W #[fg=colour39,bg=colour234,nobold]⮀'

    #set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    #if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    #refresh-client -S \;\

#bind -T off F12 \
  #set -u prefix \;\
  #set -u key-table \;\
  #set -u status-style \;\
  #set -u window-status-current-style \;\
  #set -u window-status-current-format \;\
  #refresh-client -S



# --------------------------------------------
# ------------- Renew environment ------------
# --------------------------------------------
set -g update-environment \
  "DISPLAY\
  SSH_ASKPASS\
  SSH_AUTH_SOCK\
  SSH_AGENT_PID\
  SSH_CONNECTION\
  SSH_TTY\
  WINDOWID\
  XAUTHORITY"

bind '$' run "~/.tmux/renew_env.sh"


# --------------------------------------------
# ------------------- Plugins ----------------
# --------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

# Plugin properties
set -g @sidebar-tree 't'
set -g @sidebar-tree-focus 'T'
set -g @sidebar-tree-command 'tree -C'

set -g @open-S 'https://www.google.com/search?q='

# Run all plugins' scripts
run -b '~/.tmux/plugins/tpm/tpm'
